{
  "numStartups": 7,
  "installMethod": "unknown",
  "autoUpdates": true,
  "customApiKeyResponses": {
    "approved": [],
    "rejected": [
      "8nG8mApsSMw-xpCpoQAA"
    ]
  },
  "tipsHistory": {
    "new-user-warmup": 5,
    "memory-command": 2,
    "theme-command": 2,
    "status-line": 2,
    "enter-to-steer-in-relatime": 2,
    "todo-list": 2,
    "ide-upsell-external-terminal": 6,
    "# for memory": 2,
    "install-github-app": 2,
    "drag-and-drop-images": 2,
    "double-esc": 2,
    "continue": 2,
    "shift-tab": 2,
    "custom-agents": 6
  },
  "promptQueueUseCount": 61,
  "gitBashPath": "K:\\tools\\git\\bin\\bash.exe",
  "shell": "cmd.exe",
  "mcpServers": {
    "mcp-installer": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@anaisbetts/mcp-installer"
      ]
    },
    "filesystem": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/node.exe",
      "args": [
        "K:\\PortableApps\\Claude-Code\\node_modules\\@modelcontextprotocol\\server-filesystem\\dist\\index.js"
      ],
      "env": {
        "ALLOWED_DIRECTORIES": "K:\\"
      }
    },
    "memory": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/node.exe",
      "args": [
        "K:\\PortableApps\\Claude-Code\\node_modules\\@modelcontextprotocol\\server-memory\\dist\\index.js"
      ]
    },
    "shrimp-task": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/node.exe",
      "args": [
        "K:\\PortableApps\\Claude-Code\\node_modules\\mcp-shrimp-task-manager\\dist\\index.js"
      ],
      "env": {
        "TASK_DATA_PATH": "K:\\PortableApps\\Claude-Code\\ShrimpData"
      }
    },
    "github": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_TOKEN": "github_pat_11AZVQ7MA0vZm8Ks5F7YBZ_6QOxBTJPvnxXvtZ0fR8B5Zr2HwzVXqT3mLqK9Wn8XpXJQZV5X9KqH7vLx8"
      }
    },
    "firecrawl": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/npx.cmd",
      "args": [
        "-y",
        "@firecrawl/mcp-server@latest"
      ],
      "env": {
        "FIRECRAWL_API_KEY": "fc-1469b38350c643e4a3f8b1b4037e2b20"
      }
    },
    "git-mcp": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/node.exe",
      "args": [
        "K:\\PortableApps\\Claude-Code\\node_modules\\@cyanheads\\git-mcp-server\\dist\\index.js"
      ],
      "env": {
        "GIT_REPOSITORY_PATH": "K:\\PortableApps\\Claude-Code"
      }
    },
    "sqlite-mcp": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/npx.cmd",
      "args": [
        "-y",
        "mcp-server-sqlite-npx",
        "--db-path",
        "K:/PortableApps/Claude-Code/data/sqlite/test.db"
      ]
    },
    "websearch": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "websearch-mcp"
      ],
      "env": {
        "TAVILY_API_KEY": "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"
      }
    },
    "youtube-data": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "youtube-data-mcp-server"
      ],
      "env": {
        "YOUTUBE_API_KEY": "AIzaSyAJu9N0loVLcUWQiWLMVn69ANAYqVZu_o8"
      }
    },
    "edit-file-lines": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/node.exe",
      "args": [
        "K:\\PortableApps\\Claude-Code\\mcp-servers\\mcp-edit-file-lines\\build\\index.js"
      ]
    },
    "kiro-memory": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/python/python.exe",
      "args": [
        "K:\\PortableApps\\Claude-Code\\mcp-servers\\kiro-memory\\mcp_server_enhanced.py"
      ],
      "env": {
        "PYTHONPATH": "K:\\PortableApps\\tools\\python\\Lib\\site-packages"
      }
    },
    "context7": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@upstash/context7-mcp@latest"
      ]
    },
    "google-search": {
      "type": "stdio",
      "command": "K:/PortableApps/tools/nodejs/npx.cmd",
      "args": [
        "-y",
        "google-search-mcp"
      ],
      "env": {
        "GOOGLE_SEARCH_API_KEY": "AIzaSyCL_TqCq7LG8rKjGDgYSdCJEOT_8a9V1Gs",
        "GOOGLE_SEARCH_ENGINE_ID": "65c0e1c5d01ac4edb"
      }
    },
    "playwright": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@executeautomation/playwright-mcp-server"
      ]
    },
    "perplexity": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "perplexity-mcp"
      ],
      "env": {
        "PERPLEXITY_API_KEY": "pplx-your-api-key"
      }
    },
    "postgres": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-postgres"
      ],
      "env": {
        "POSTGRES_CONNECTION_STRING": "postgresql://user:password@localhost:5432/database"
      }
    },
    "slack": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-slack"
      ],
      "env": {
        "SLACK_BOT_TOKEN": "xoxb-your-slack-bot-token",
        "SLACK_TEAM_ID": "your-team-id"
      }
    },
    "mongodb": {
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "mongodb-mcp"
      ],
      "env": {
        "MONGODB_URI": "mongodb://localhost:27017/database"
      }
    }
  },
  "userID": "c4c10b6644c2d667dffe707a92908a2c7784320f4bc2364c35ab54fd6ba7b91b",
  "projects": {
    "K:\\PortableApps\\Claude-Code": {
      "allowedTools": [],
      "history": [
        {
          "display": "또 시간 에러 발생하네요. 8월 21일로 다시 바꿔요",
          "pastedContents": {}
        },
        {
          "display": "이제부터 문제 해결시 까지 텍스트 파일로 만드세요. 한번에 붙여 넣으면 되는 텍스트 파일 그것을 제가 cmd나 powershell에 붙여 넣으면 해결되는 파일로요. 파일 정리 뿐 아니라 이제 bash 문제도 메모장 일단 만들고 그것을 명령을 내가 직접 터미널 환경에서 넣고 진행합니다. 그렇게 해서 해결되면 다시 당신이 다시 내 프롬프트로 명령을 진행 할 것입니다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "확인해보라 문제 없는지",
          "pastedContents": {}
        },
        {
          "display": "이제 해결되었는지 해봐라",
          "pastedContents": {}
        },
        {
          "display": "배시를 해결하려는데 자꾸 배치파일 만들고 만든 배치파일은 해결도 못하면서 배치파일을 만드니까 자꾸 실패하고 실제 실행도 못하네요. 방법이 이것이 문제인데 제대로 할수없어요? 전부 아주 세부단계별로 bash 실행만 잡으려고 최선을 다해봅시다. 어떻게 해야 bash관련 에ㄹ를 없애고 다음에 배시 말고도 정상적으로 실행해갈까요? Ultrathink",
          "pastedContents": {}
        },
        {
          "display": "JS는 컴파일오류 발생시키네요",
          "pastedContents": {}
        },
        {
          "display": "너 진짜 배치파일 못만든다. 무조건 에러가 나네요. 그런데도 배치 만드려고 하는것은 문제 아니에요? 불가능한데요?",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "자꾸 잘 쓰지도 못하는 bat 파일을 만드는데요. 만들꺼면 하나로 방법을 구하고 틀리지 않는 코드로 만들거나 js도 잘 못만드네요. 방안을 강구해요. 제대로 하도록 ultrathink",
          "pastedContents": {}
        },
        {
          "display": "일단 파워쉘로 진행하고 그다음 파워쉘로 배시 문제 해결하는 것 어때요?",
          "pastedContents": {}
        },
        {
          "display": " 19개 아니에요? ",
          "pastedContents": {}
        },
        {
          "display": "확인해보세요",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "아니 파일 열어서 필요한 내용 쓰고 저장하면 되는것 아닌가요? 계속 bat파일이나 js 만들고 실행해야 해요. read write excute 못하나요?",
          "pastedContents": {}
        },
        {
          "display": "K:\\tools\\git 여기를 한번볼래요?",
          "pastedContents": {}
        },
        {
          "display": "클로드 코드 windows native install을 얘기해주세요",
          "pastedContents": {}
        },
        {
          "display": "원래 뭐를 쓰는데요?",
          "pastedContents": {}
        },
        {
          "display": "원래 클로드 코드 설치 했을때 bash를 설치하라고 해요? 원래 설치를 하고 클로드 코드를 진행해요? native windows",
          "pastedContents": {}
        },
        {
          "display": "그래서 bash 환경 분석했는데 뭐해요? 그동안 많이 분석했잖아요",
          "pastedContents": {}
        },
        {
          "display": "또 배치파일 만들었어요?",
          "pastedContents": {}
        },
        {
          "display": "필요한 것 있으면 진행하거나. 해보시고 해결책 제공에 bat 파일 이상한지 확인해보세요. 시작하시고 끝까지 진행되도록 해봅시다. ultimatethink start",
          "pastedContents": {}
        },
        {
          "display": "아니다. 모든 내용을 찾아야 한다. 윈도우 wsl 실행 외에도 native install이 있다. 확인했는가? 제대로 다시 확인하라. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "키워드가 아니라 먼저 무엇이 맞는 것인지 찾고 지금 설정이 제대로 되어 있는 것인가 아닌가를 먼저 웹검색 혹은 여러 방안으로 진행한 후에 시작하며 헷갈리지 않도록 기준을 잡고 이후에 또한 모든 단계에서 웹검색등 모든것을 찾아가면서 진행하는 것이다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "무엇이 맞는지 확인하고 면서 진행하면서 해야 합니다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "아니다. 검증절차에는 항상 웹검색으로 불일치하는 부분에서 무엇이 맞는지 항상 비교 검색되어야 한다. 지금 무엇이 문제인지 제대로 파악하지 못하였다. 피상적인 문제해결 방법이 아닌 진짜 원인을 분석하기 위해 모든 단계에 공식 문서, 웹 검색 등 모든 수단을 마련하여 모든 단계에서 이것을 항상 진행하라. 무조건 적인 지침이다. 잘못된 것을 스스로 증폭시키지 않기 위해 검증하고 진행하라. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "진행하되 문제 발견하면 바로 세부 태스크 만들고 그것을 해결하면서 진행하세요. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "현재 문제 있는지 확인해주세요. 단계 단계 전에 일단 플랜을 말하고 승인받으세요. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "/status ",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "진짜 맞아요? 근거를 보여줘요. 내게 실제인지 실증해주셔야 합니다. 즉 링크도 주시고 셸 스냅샷? 이게 있어야 하는 이유가 있는지 말해주셔야 합니다. 타임스탬프를 찍는데 원래 찍는 방안을 알려줘야 하구요. 다시 진행합시다. ultrathink. 항상 ultrathink라고 하는데 제대로된 상황을 파악못하는 것 같다. 항상 문제를 해결해야 하고 integration, implement 되어야 한다. 답변으로 끝낼 생각하지 말고 자꾸 잘못만드는 bat 만들 생각 하지 말고 진짜 해결할 생각을 찾아서 해야 한다. k드라이브 내 모든 것을 연결하고 이제 가능한 방법을 찾아라. 간단하게 진행할 생각하지 말라. 무조건 엄청난 단계를 많이 생성하여 진행하라. 세부 단계를 통해 진행하며 plan을 세운 후 진행해야 한다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "본질적이고 정석적인 것들을 제대로 하고 있나요? 지금 임시방편만 말하는것 아니에요? 혹시 답변만 하려고 그냥 피상적인 것만 말하는 것 아닌가요? 더 깊게 가봅시다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "왜 저런것들이 하드코딩되어 기록되어 있죠?",
          "pastedContents": {}
        },
        {
          "display": "bat 보니 강제로 혹시 하드코딩시키는 것 아닌가?",
          "pastedContents": {}
        },
        {
          "display": "하나를 찾을 때 문제가 무엇인지 하나를 확인하고 그외의 부차적인 것을 확인하고 하나 하나의 연결된 문제인지 개별적인 문제인지 당연히 분리해야 하지 않나? 유저의 프롬프트만 확인하고 따라가려고 하는 것도 문제인 것이다. 어떻게 해야 문제를 해결할 수 있는지를 확실한 확인 방법을 찾아라.",
          "pastedContents": {}
        },
        {
          "display": "`(\"what is today's date current date time January 2025\") 왜 이렇게 시작하나? what time is it now 면\n  충분한것아닌가? 왜 진짜를 찾기 위한 것으로 시작하지 않나? 복잡하고 스스로 이상한 것을 찾도록 하나? 당연한 것들부터 하자. 지금 내가 가지고 있는 정보와 외부의 신뢰할 수 있는 정보와 검증하고 시작하자. 내가 생각하고   │\n│   내가 보고 있는것부터 참조하는 것이 아니라, 당연한것. 무조건 진실일 수 밖에 없는것 부터 찾고, 그것부터 시작해야  한다. 문제를 확실히 해보자. 당신은 지금 잘못된 생각을 하고 있다. 당연한 것들을 찾자. 지금은 몇일이고 몇시인가?   │   이것을  먼저 찾고 시작하는 것이 당연한 것 아닌가? 지금 시스템이 오염되어 있을 가능성을 찾고 진짜 무엇이 진실인지 확인한  │\n│     후 진행하는 것이 당연하다. 무엇을 찾아야 하는가? 오늘은 몇일 몇시? 내가 만든 것은 몇일 몇시? 그리고 지금 내가    │\n│     인지하는 시간은 몇일 몇시 몇분? 이것을 먼저 확인해보라고 내가 스스로 생각한 것들이 잘못되어 있는지 확인하라는    │\n│     것이었다. 그것부터 시작하라. 자신이 스스로 제대로 했다고 생각하는 것들도 다시 확인할 필요성이 있다고 하는 것이 │     이런것이다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "`(\"what is today's date current date time January 2025\") 왜 이렇게 시작하나? what time is it now 면 충분한것아닌가? 왜 진짜를 찾기 위한 것으로 시작하지 않나? 복잡하고 스스로 이상한 것을 찾도록 하나? 분? 이것을 먼저 확인해보라고 내가 스스로 생각한 것들이 잘못되어 있는지 확인하라는    │\n│     것이었다. 그것부터 시작하라. 자신이 스스로 제대로 했다고 생각하는 것들도 다시 확인할 필요성이 있다고 하는 것이   │\n│     이런것이다. ultrathink     ",
          "pastedContents": {}
        },
        {
          "display": "당연한 것들부터 하자. 지금 내가 가지고 있는 정보와 외부의 신뢰할 수 있는 정보와 검증하고 시작하자. 내가 생각하고 내가 보고 있는것부터 참조하는 것이 아니라, 당연한것. 무조건 진실일 수 밖에 없는것 부터 찾고, 그것부터 시작해야 한다. 문제를 확실히 해보자. 당신은 지금 잘못된 생각을 하고 있다. 당연한 것들을 찾자. 지금은 몇일이고 몇시인가? 이것을\n  먼저 찾고 시작하는 것이 당연한 것 아닌가? 지금 시스템이 오염되어 있을 가능성을 찾고 진짜 무엇이 진실인지 확인한\n  후 진행하는 것이 당연하다. 무엇을 찾아야 하는가? 오늘은 몇일 몇시? 내가 만든 것은 몇일 몇시? 그리고 지금 내가\n  인지하는 시간은 몇일 몇시 몇분? 이것을 먼저 확인해보라고 내가 스스로 생각한 것들이 잘못되어 있는지 확인하라는\n  것이었다. 그것부터 시작하라. 자신이 스스로 제대로 했다고 생각하는 것들도 다시 확인할 필요성이 있다고 하는 것이\n  이런것이다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "문제를 확실히 해보자. 당신은 지금 잘못된 생각을 하고 있다. 당연한 것들을 찾자. 지금은 몇일이고 몇시인가? 이것을 먼저 찾고 시작하는 것이 당연한 것 아닌가? 지금 시스템이 오염되어 있을 가능성을 찾고 진짜 무엇이 진실인지 확인한 후 진행하는 것이 당연하다. 무엇을 찾아야 하는가? 오늘은 몇일 몇시? 내가 만든 것은 몇일 몇시? 그리고 지금 내가 인지하는 시간은 몇일 몇시 몇분? 이것을 먼저 확인해보라고 내가 스스로 생각한 것들이 잘못되어 있는지 확인하라는 것이었다. 그것부터 시작하라. 자신이 스스로 제대로 했다고 생각하는 것들도 다시 확인할 필요성이 있다고 하는 것이 이런것이다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "스스로 의심하라. 웹 검색하고 당연하다고 생각하는 것들 모두를 확인하라. 당신은 잘못된 사고방식을 사용하고 있다. 다시 ultrathink",
          "pastedContents": {}
        },
        {
          "display": "무조건 확인하고 진행하라. 스스로 만든 것들도 의심하라. 무조건 웹검색과 스스로 검색하고 진행하지 말라. 당신은 지금 완전치 않으니 아주 위험한 상태로 보고 스스로를 의심하면서 찾아가면서 진행하라. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "내가 준것은 깨진 것인데. 지금 현재 설정은 json에서 해당 내용이 사라졌다. 그러면 정상적으로 모두 19개가 설정되어 있을때에는 어떻게 되어야 할지 정말 많이 고민하여서 만들라. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1 +208 lines] 이것을 보고 .claude.json에서 mcp 서버 해제되고 안되었던것 다시 연결해야 할것 같아. 문제가 많다. ultrathink",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "\"mcpServers\": {\n    \"mcp-installer\": {\n      \"type\": \"stdio\",\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@anaisbetts/mcp-installer\"\n      ]\n    },\n    \"filesystem\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/Claude-Code/backup-20250120/nodejs/node.exe\",\n      \"args\": [\n        \"K:\\\\PortableApps\\\\Claude-Code\\\\node_modules\\\\@modelcontextprotocol\\\\server-filesystem\\\\dist\\\\index.js\"\n      ],\n      \"env\": {\n        \"ALLOWED_DIRECTORIES\": \"K:\\\\\"\n      }\n    },\n    \"memory\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/tools/nodejs/node.exe\",\n      \"args\": [\n        \"K:\\\\PortableApps\\\\Claude-Code\\\\node_modules\\\\@modelcontextprotocol\\\\server-memory\\\\dist\\\\index.js\"\n      ]\n    },\n    \"shrimp-task\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/tools/nodejs/node.exe\",\n      \"args\": [\n        \"K:\\\\PortableApps\\\\Claude-Code\\\\node_modules\\\\mcp-shrimp-task-manager\\\\dist\\\\index.js\"\n      ],\n      \"env\": {\n        \"TASK_DATA_PATH\": \"K:\\\\PortableApps\\\\Claude-Code\\\\ShrimpData\"\n      }\n    },\n    \"context7\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@upstash/context7-mcp@latest\"\n      ]\n    },\n    \"edit-file-lines\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/tools/nodejs/node.exe\",\n      \"args\": [\n        \"K:\\\\PortableApps\\\\Claude-Code\\\\mcp-servers\\\\mcp-edit-file-lines\\\\build\\\\index.js\"\n      ]\n    },\n    \"google-search\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/tools/nodejs/npx.cmd\",\n      \"args\": [\n        \"-y\",\n        \"google-search-mcp\"\n      ],\n      \"env\": {\n        \"GOOGLE_SEARCH_API_KEY\": \"AIzaSyCL_TqCq7LG8rKjGDgYSdCJEOT_8a9V1Gs\",\n        \"GOOGLE_SEARCH_ENGINE_ID\": \"65c0e1c5d01ac4edb\"\n      }\n    },\n    \"firecrawl\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/tools/nodejs/npx.cmd\",\n      \"args\": [\n        \"-y\",\n        \"@firecrawl/mcp-server@latest\"\n      ],\n      \"env\": {\n        \"FIRECRAWL_API_KEY\": \"fc-1469b38350c643e4a3f8b1b4037e2b20\"\n      }\n    },\n    \"kiro-memory\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:\\\\tools\\\\python\\\\python.exe\",\n      \"args\": [\n        \"K:\\\\PortableApps\\\\Claude-Code\\\\mcp-servers\\\\kiro-memory\\\\mcp_server_enhanced.py\"\n      ],\n      \"env\": {\n        \"PYTHONPATH\": \"K:\\\\tools\\\\python\\\\Lib\\\\site-packages\"\n      }\n    },\n    \"sqlite-mcp\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/tools/nodejs/npx.cmd\",\n      \"args\": [\n        \"-y\",\n        \"mcp-server-sqlite-npx\",\n        \"--db-path\",\n        \"K:/PortableApps/Claude-Code/data/sqlite/test.db\"\n      ]\n    },\n    \"git-mcp\": {\n      \"type\": \"stdio\",\n      \"command\": \"K:/PortableApps/tools/nodejs/node.exe\",\n      \"args\": [\n        \"K:\\\\PortableApps\\\\Claude-Code\\\\node_modules\\\\@cyanheads\\\\git-mcp-server\\\\dist\\\\index.js\"\n      ],\n      \"env\": {\n        \"GIT_REPOSITORY_PATH\": \"K:\\\\PortableApps\\\\Claude-Code\"\n      }\n    },\n    \"websearch\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"websearch-mcp\"\n      ],\n      \"env\": {\n        \"TAVILY_API_KEY\": \"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\"\n      }\n    },\n    \"playwright\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@executeautomation/playwright-mcp-server\"\n      ]\n    },\n    \"youtube-data\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"youtube-data-mcp-server\"\n      ],\n      \"env\": {\n        \"YOUTUBE_API_KEY\": \"AIzaSyAJu9N0loVLcUWQiWLMVn69ANAYqVZu_o8\"\n      }\n    },\n    \"github\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@modelcontextprotocol/server-github\"\n      ],\n      \"env\": {\n        \"GITHUB_TOKEN\": \"github_pat_11AZVQ7MA0vZm8Ks5F7YBZ_6QOxBTJPvnxXvtZ0fR8B5Zr2HwzVXqT3mLqK9Wn8XpXJQZV5X9KqH7vLx8\"\n      }\n    },\n    \"perplexity\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"perplexity-mcp\"\n      ],\n      \"env\": {\n        \"PERPLEXITY_API_KEY\": \"pplx-your-api-key\"\n      }\n    },\n    \"postgres\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@modelcontextprotocol/server-postgres\"\n      ],\n      \"env\": {\n        \"POSTGRES_CONNECTION_STRING\": \"postgresql://user:password@localhost:5432/database\"\n      }\n    },\n    \"slack\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"@modelcontextprotocol/server-slack\"\n      ],\n      \"env\": {\n        \"SLACK_BOT_TOKEN\": \"xoxb-your-slack-bot-token\",\n        \"SLACK_TEAM_ID\": \"your-team-id\"\n      }\n    },\n    \"mongodb\": {\n      \"type\": \"stdio\",\n      \"command\": \"cmd\",\n      \"args\": [\n        \"/c\",\n        \"npx\",\n        \"-y\",\n        \"mongodb-mcp\"\n      ],\n      \"env\": {\n        \"MONGODB_URI\": \"mongodb://localhost:27017/database\"\n      }\n    }\n  },"
            }
          }
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "피상적으로 진행하지 마시고 진짜 더 깊게 가봅시다. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "일단 눌렀어요 확인해보세요",
          "pastedContents": {}
        },
        {
          "display": "스스로 해보고 말해줄수는 없는거에요?",
          "pastedContents": {}
        },
        {
          "display": "업데이트 문제가 아닌것 같아요. 한번 확인해주세요.",
          "pastedContents": {}
        },
        {
          "display": "한번 확인해 볼래요/",
          "pastedContents": {}
        },
        {
          "display": "이제 확인되나요>?",
          "pastedContents": {}
        },
        {
          "display": "스스로 해볼래요? 확인을",
          "pastedContents": {}
        },
        {
          "display": "위치는 맞고 그러면 에러 발생 원인은?",
          "pastedContents": {}
        },
        {
          "display": "git-bash와 bin/bash의 차이는?",
          "pastedContents": {}
        },
        {
          "display": "한번더 봐주세요. git/bash는 프로젝트 외부에 존재해요. 이를 확인해서 가져올수 있어요? 프로젝트 외부의 폴더에 역시 python, node.js 등도 있어요. 확인이 필요할 것 같아요.",
          "pastedContents": {}
        },
        {
          "display": "ENOENT 문제는 뭐에요?",
          "pastedContents": {}
        },
        {
          "display": "확인해 보세요/",
          "pastedContents": {}
        },
        {
          "display": "아니에요. bash 문제를 다시 확인해달라. ultrathink",
          "pastedContents": {}
        },
        {
          "display": "3중 백업 자동 복구 완전 자동화가 혹시 순환참조나 나쁜 코드를 만든 것 아니야? ultrathink",
          "pastedContents": {}
        },
        {
          "display": "실행해주세요. 그리고 자동 복구가 저것 위험하나?",
          "pastedContents": {}
        },
        {
          "display": "bash 문제 해결해주세요. 한번 찾아보세요. 방법을",
          "pastedContents": {}
        },
        {
          "display": "삭제해 주세요.",
          "pastedContents": {}
        },
        {
          "display": "필요한 server.js에요?",
          "pastedContents": {}
        },
        {
          "display": "google-api  무슨 것에서 server.js 파일이에요ㅛ",
          "pastedContents": {}
        },
        {
          "display": "노드 모듈의 GOOGLE API 하위어디에 server.js가 있는데 이 것의 용도는?",
          "pastedContents": {}
        },
        {
          "display": "/mcp ",
          "pastedContents": {}
        },
        {
          "display": "K:\\PortableApps\\Claude-Code내 쓴 텍스트도 모두 옮겨야 겠네",
          "pastedContents": {}
        },
        {
          "display": "이것은 스슬 수정할 수 있잖아요.",
          "pastedContents": {}
        },
        {
          "display": "혹시 claude.md에 들어간 것중에 수정되어야 한 것 없죠?",
          "pastedContents": {}
        },
        {
          "display": "K:\\PortableApps\\Claude-Code 이 모든 폴더와 모든 파일을 보고 이를 정리하라.",
          "pastedContents": {}
        },
        {
          "display": "클로드 코드 폴더내 module과 docs는 비슷한 속성인것 같은데 통합하고 분류할 수 있나요? ",
          "pastedContents": {}
        },
        {
          "display": "evidence에서 순환참조 관련만 빼서 다시 evidence 내 다른 폴더로 구분해주세요.",
          "pastedContents": {}
        },
        {
          "display": "혹시 정리하긴하는데 증거로서 남겨야 할것 있어요?",
          "pastedContents": {}
        },
        {
          "display": "더 정리할 것 있나요?",
          "pastedContents": {}
        },
        {
          "display": "위에 처럼 txt파일 주면 실행할게요.",
          "pastedContents": {}
        },
        {
          "display": "또한 불필요한 md나 json도 찾아서 정리하자",
          "pastedContents": {}
        },
        {
          "display": "증거로서 남겨놔야 하는 것들은 남겨놓을것. 이것은 증거 폴더로 추가로 남기기",
          "pastedContents": {}
        },
        {
          "display": "자꾸 배치파일만 늘어난다.",
          "pastedContents": {}
        },
        {
          "display": "배치 계속 만들지 않고 문제를 해결했으면 ㅎ좋겠다. 또한 혹시 지금도 순환참조 만든것 아닌가?",
          "pastedContents": {}
        },
        {
          "display": "이를 문제 해결할 수 있나?",
          "pastedContents": {}
        },
        {
          "display": "timestamp를 확인해보라.K:\\PortableApps\\Claude-Archive, K:\\PortableApps\\Claude-Code_Backup 모두 확인해보면 이 문제는 찾아볼수 있을 것 같다. 확인",
          "pastedContents": {}
        },
        {
          "display": "그러면 .claude.json 파일이 여러개가 있었을것 같은데 혹시 이를 아카이빙이나 다른 여러개의 폴더 내 .claude.json과 유사하거나 깨진 파일을 보면 뭔가 원인을 찾을 수 있나?",
          "pastedContents": {}
        },
        {
          "display": "타임스탬프 혼입이 순환참조 만들었어요? 그것과는 상관 없어요?",
          "pastedContents": {}
        },
        {
          "display": "그런데 claude.json도 기존과 다른 아예 새로운 claude.json으로 작성했는데 왜 이런 타임스탬프가 혼입되었을까요?",
          "pastedContents": {}
        },
        {
          "display": "타임스탬프를 해석하는 방식이 뭐에요? 어떻게 저게 저 날짜가 되는지 설명해 주세요.",
          "pastedContents": {}
        },
        {
          "display": "이것 모두 추정이 아닌가요? 입증된 것 있어요?",
          "pastedContents": {}
        },
        {
          "display": "“Even when running on the C: drive, the same circular reference and timestamp errors occurred. I even deleted all projects when moving it to a portable drive and started with only an index.html file.”",
          "pastedContents": {}
        },
        {
          "display": "“Do other users experience this as well?”",
          "pastedContents": {}
        },
        {
          "display": "  | .claude.json corruption | Claude Code's design | No file locking, non-atomic writes   |\n  | Wrong timestamps        | Claude Code's bug    | Future dates, wrong months  “I understand that other users don’t experience these two issues. Why did this happen—what is the cause? Explain this in the order of English followed by Korean.” ULTRATHINK",
          "pastedContents": {}
        },
        {
          "display": "“Is it originally designed this way? Is it due to the user’s instructions or the user’s prompt? What is the cause? Explain this in the order of English followed by Korean.”",
          "pastedContents": {}
        },
        {
          "display": "“Then, please identify the cause of why .claude.json keeps getting corrupted. Explain your findings first in English and then in Korean. Provide this in English.” ultrathink",
          "pastedContents": {}
        },
        {
          "display": "“Is this truly a circular reference? Prove it. Explain its impact, and present the explanation in the order of English followed by Korean.”",
          "pastedContents": {}
        },
        {
          "display": "[Pasted text #1] ultrathink",
          "pastedContents": {
            "1": {
              "id": 1,
              "type": "text",
              "content": "‘A circular reference just occurred again. What instructions did I give, what prompt did I provide, and how did that prompt lead to the circular reference? To what extent did its impact spread? While I was reviewing several pieces of code, did a real circular reference actually occur? What is the exact time when the current circular reference was created; what did the user request; what was the cause that, based on that request, led all the way to the circular reference; and, when this occurred, what are the risks and impacts? Please explain all of this in detail. Could additional memory pressure or disk exhaustion also occur? Proceed according to the five Ws and one H with forensic-level, detailed evidence. Very thoroughly. Provide a timetable and describe what circular-reference code was being drafted. Do not be constrained by the user’s prompt—think for yourself, make balanced and well-reasoned judgments, and analyze in detail what is really happening, then report it. And please present the explanati"
            }
          }
        },
        {
          "display": "백업이 순환참조가 있는거에요? 아니면 어디서 순환참조가 있는거에요?",
          "pastedContents": {}
        },
        {
          "display": "전체 순환참조가 있다고요? 진짜에요?",
          "pastedContents": {}
        },
        {
          "display": "이것 순환참조 맞나? 내가 순환참조로 오인한 것 같은데 맞나?",
          "pastedContents": {}
        },
        {
          "display": "My requests were:\n\nThe .claude.json file was breaking — why does this happen so often?\n\nThe times in documents or log files often don’t match — please check.\n\nIf there are unnecessary files, please clean them up.\n\nWhile handling request #2, the system attempted to write circular reference code. I noticed it immediately and stopped it from being written. Is this correct? Is it true? Please tell me again at a forensic and legal evidence level.",
          "pastedContents": {}
        },
        {
          "display": "어느 프로세스가 다른 시간을 기록하는가? 각각의 프로세스가 각각 다른 시간을 기록한다고 하는데 이해가 되지 않는다. 내가 여러개의 프로세스를 만든 것도 아니고 도대체 타임스탬프 문제가 왜 발생하는가?",
          "pastedContents": {}
        },
        {
          "display": "과거로도 찍고 미래로도 찍고 계속 타임스탬프 문제가 있는데 이것이 진짜 원인인가? 모든 것을 확인해 달라.",
          "pastedContents": {}
        },
        {
          "display": "8월 22일도 아니다. 지금은 8월 20일인데 어떻게 8월 22일인가? 타임스탬프의 문제가 어디서 나왔는지 확인해달라.",
          "pastedContents": {}
        },
        {
          "display": " changelogLastFetched: 1755661156324 그런데 이것이 7월 22일이 맞나? 그것도 확인해달라.",
          "pastedContents": {}
        },
        {
          "display": "모두 영어와 한국어로 문서화 다시 해달라.",
          "pastedContents": {}
        }
      ],
      "mcpContextUris": [],
      "mcpServers": {},
      "enabledMcpjsonServers": [],
      "disabledMcpjsonServers": [],
      "hasTrustDialogAccepted": false,
      "projectOnboardingSeenCount": 0,
      "hasClaudeMdExternalIncludesApproved": false,
      "hasClaudeMdExternalIncludesWarningShown": false,
      "hasCompletedProjectOnboarding": true,
      "lastTotalWebSearchRequests": 1
    }
  },
  "fallbackAvailableWarningThreshold": 0.5,
  "firstStartTime": "2025-08-16T03:37:01.975Z",
  "oauthAccount": {
    "accountUuid": "42075a9f-2049-448b-808b-2fa8a0a9aff9",
    "emailAddress": "fofzoy@gmail.com",
    "organizationUuid": "504d6456-0ca3-4a13-a46e-84b077157abf",
    "organizationRole": "admin",
    "workspaceRole": null,
    "organizationName": "fofzoy@gmail.com's Organization"
  },
  "claudeCodeFirstTokenDate": "2025-08-21T06:00:00.000Z",
  "hasCompletedOnboarding": true,
  "lastOnboardingVersion": "1.0.77",
  "subscriptionNoticeCount": 0,
  "hasAvailableSubscription": false,
  "cachedChangelog": "# Changelog\n\n## 1.0.85\n\n- Status line input now includes session cost info\n\n## 1.0.84\n\n- Fix tool_use/tool_result id mismatch error when network is unstable\n- Fix Claude sometimes ignoring real-time steering when wrapping up a task\n- @-mention: Add ~/.claude/* files to suggestions for easier agent, output style, and slash command editing\n- Use built-in ripgrep by default; to opt out of this behavior, set USE_BUILTIN_RIPGREP=0\n\n## 1.0.83\n\n- @-mention: Support files with spaces in path\n- New shimmering spinner\n\n## 1.0.82\n\n- SDK: Add request cancellation support\n- SDK: New additionalDirectories option to search custom paths, improved slash command processing\n- Settings: Validation prevents invalid fields in .claude/settings.json files\n- MCP: Improve tool name consistency\n- Bash: Fix crash when Claude tries to automatically read large files\n\n## 1.0.81\n\n- Released output styles, including new built-in educational output styles \"Explanatory\" and \"Learning\". Docs: https://docs.anthropic.com/en/docs/claude-code/output-styles\n- Agents: Fix custom agent loading when agent files are unparsable\n\n## 1.0.80\n\n- UI improvements: Fix text contrast for custom subagent colors and spinner rendering issues\n\n## 1.0.77\n\n- Bash tool: Fix heredoc and multiline string escaping, improve stderr redirection handling\n- SDK: Add session support and permission denial tracking\n- Fix token limit errors in conversation summarization\n- Opus Plan Mode: New setting in `/model` to run Opus only in plan mode, Sonnet otherwise\n\n## 1.0.73\n\n- MCP: Support multiple config files with `--mcp-config file1.json file2.json`\n- MCP: Press Esc to cancel OAuth authentication flows\n- Bash: Improved command validation and reduced false security warnings\n- UI: Enhanced spinner animations and status line visual hierarchy\n- Linux: Added support for Alpine and musl-based distributions (requires separate ripgrep installation)\n\n## 1.0.72\n\n- Ask permissions: have Claude Code always ask for confirmation to use specific tools with /permissions\n\n## 1.0.71\n\n- Background commands: (Ctrl-b) to run any Bash command in the background so Claude can keep working (great for dev servers, tailing logs, etc.)\n- Customizable status line: add your terminal prompt to Claude Code with /statusline\n\n## 1.0.70\n\n- Performance: Optimized message rendering for better performance with large contexts\n- Windows: Fixed native file search, ripgrep, and subagent functionality\n- Added support for @-mentions in slash command arguments\n\n## 1.0.69\n\n- Upgraded Opus to version 4.1\n\n## 1.0.68\n\n- Fix incorrect model names being used for certain commands like `/pr-comments`\n- Windows: improve permissions checks for allow / deny tools and project trust. This may create a new project entry in `.claude.json` - manually merge the history field if desired.\n- Windows: improve sub-process spawning to eliminate \"No such file or directory\" when running commands like pnpm\n- Enhanced /doctor command with CLAUDE.md and MCP tool context for self-serve debugging\n- SDK: Added canUseTool callback support for tool confirmation\n- Added `disableAllHooks` setting\n- Improved file suggestions performance in large repos\n\n## 1.0.65\n\n- IDE: Fixed connection stability issues and error handling for diagnostics\n- Windows: Fixed shell environment setup for users without .bashrc files\n\n## 1.0.64\n\n- Agents: Added model customization support - you can now specify which model an agent should use\n- Agents: Fixed unintended access to the recursive agent tool\n- Hooks: Added systemMessage field to hook JSON output for displaying warnings and context\n- SDK: Fixed user input tracking across multi-turn conversations\n- Added hidden files to file search and @-mention suggestions\n\n## 1.0.63\n\n- Windows: Fixed file search, @agent mentions, and custom slash commands functionality\n\n## 1.0.62\n\n- Added @-mention support with typeahead for custom agents. @<your-custom-agent> to invoke it\n- Hooks: Added SessionStart hook for new session initialization\n- /add-dir command now supports typeahead for directory paths\n- Improved network connectivity check reliability\n\n## 1.0.61\n\n- Transcript mode (Ctrl+R): Changed Esc to exit transcript mode rather than interrupt\n- Settings: Added `--settings` flag to load settings from a JSON file\n- Settings: Fixed resolution of settings files paths that are symlinks\n- OTEL: Fixed reporting of wrong organization after authentication changes\n- Slash commands: Fixed permissions checking for allowed-tools with Bash\n- IDE: Added support for pasting images in VSCode MacOS using ⌘+V\n- IDE: Added `CLAUDE_CODE_AUTO_CONNECT_IDE=false` for disabling IDE auto-connection\n- Added `CLAUDE_CODE_SHELL_PREFIX` for wrapping Claude and user-provided shell commands run by Claude Code\n\n## 1.0.60\n\n- You can now create custom subagents for specialized tasks! Run /agents to get started\n\n## 1.0.59\n\n- SDK: Added tool confirmation support with canUseTool callback\n- SDK: Allow specifying env for spawned process\n- Hooks: Exposed PermissionDecision to hooks (including \"ask\")\n- Hooks: UserPromptSubmit now supports additionalContext in advanced JSON output\n- Fixed issue where some Max users that specified Opus would still see fallback to Sonnet\n\n## 1.0.58\n\n- Added support for reading PDFs\n- MCP: Improved server health status display in 'claude mcp list'\n- Hooks: Added CLAUDE_PROJECT_DIR env var for hook commands\n\n## 1.0.57\n\n- Added support for specifying a model in slash commands\n- Improved permission messages to help Claude understand allowed tools\n- Fix: Remove trailing newlines from bash output in terminal wrapping\n\n## 1.0.56\n\n- Windows: Enabled shift+tab for mode switching on versions of Node.js that support terminal VT mode\n- Fixes for WSL IDE detection\n- Fix an issue causing awsRefreshHelper changes to .aws directory not to be picked up\n\n## 1.0.55\n\n- Clarified knowledge cutoff for Opus 4 and Sonnet 4 models\n- Windows: fixed Ctrl+Z crash\n- SDK: Added ability to capture error logging\n- Add --system-prompt-file option to override system prompt in print mode\n\n## 1.0.54\n\n- Hooks: Added UserPromptSubmit hook and the current working directory to hook inputs\n- Custom slash commands: Added argument-hint to frontmatter\n- Windows: OAuth uses port 45454 and properly constructs browser URL\n- Windows: mode switching now uses alt + m, and plan mode renders properly\n- Shell: Switch to in-memory shell snapshot to fix file-related errors\n\n## 1.0.53\n\n- Updated @-mention file truncation from 100 lines to 2000 lines\n- Add helper script settings for AWS token refresh: awsAuthRefresh (for foreground operations like aws sso login) and awsCredentialExport (for background operation with STS-like response).\n\n## 1.0.52\n\n- Added support for MCP server instructions\n\n## 1.0.51\n\n- Added support for native Windows (requires Git for Windows)\n- Added support for Bedrock API keys through environment variable AWS_BEARER_TOKEN_BEDROCK\n- Settings: /doctor can now help you identify and fix invalid setting files\n- `--append-system-prompt` can now be used in interactive mode, not just --print/-p.\n- Increased auto-compact warning threshold from 60% to 80%\n- Fixed an issue with handling user directories with spaces for shell snapshots\n- OTEL resource now includes os.type, os.version, host.arch, and wsl.version (if running on Windows Subsystem for Linux)\n- Custom slash commands: Fixed user-level commands in subdirectories\n- Plan mode: Fixed issue where rejected plan from sub-task would get discarded\n\n## 1.0.48\n\n- Fixed a bug in v1.0.45 where the app would sometimes freeze on launch\n- Added progress messages to Bash tool based on the last 5 lines of command output\n- Added expanding variables support for MCP server configuration\n- Moved shell snapshots from /tmp to ~/.claude for more reliable Bash tool calls\n- Improved IDE extension path handling when Claude Code runs in WSL\n- Hooks: Added a PreCompact hook\n- Vim mode: Added c, f/F, t/T\n\n## 1.0.45\n\n- Redesigned Search (Grep) tool with new tool input parameters and features\n- Disabled IDE diffs for notebook files, fixing \"Timeout waiting after 1000ms\" error\n- Fixed config file corruption issue by enforcing atomic writes\n- Updated prompt input undo to Ctrl+\\_ to avoid breaking existing Ctrl+U behavior, matching zsh's undo shortcut\n- Stop Hooks: Fixed transcript path after /clear and fixed triggering when loop ends with tool call\n- Custom slash commands: Restored namespacing in command names based on subdirectories. For example, .claude/commands/frontend/component.md is now /frontend:component, not /component.\n\n## 1.0.44\n\n- New /export command lets you quickly export a conversation for sharing\n- MCP: resource_link tool results are now supported\n- MCP: tool annotations and tool titles now display in /mcp view\n- Changed Ctrl+Z to suspend Claude Code. Resume by running `fg`. Prompt input undo is now Ctrl+U.\n\n## 1.0.43\n\n- Fixed a bug where the theme selector was saving excessively\n- Hooks: Added EPIPE system error handling\n\n## 1.0.42\n\n- Added tilde (`~`) expansion support to `/add-dir` command\n\n## 1.0.41\n\n- Hooks: Split Stop hook triggering into Stop and SubagentStop\n- Hooks: Enabled optional timeout configuration for each command\n- Hooks: Added \"hook_event_name\" to hook input\n- Fixed a bug where MCP tools would display twice in tool list\n- New tool parameters JSON for Bash tool in `tool_decision` event\n\n## 1.0.40\n\n- Fixed a bug causing API connection errors with UNABLE_TO_GET_ISSUER_CERT_LOCALLY if `NODE_EXTRA_CA_CERTS` was set\n\n## 1.0.39\n\n- New Active Time metric in OpenTelemetry logging\n\n## 1.0.38\n\n- Released hooks. Special thanks to community input in https://github.com/anthropics/claude-code/issues/712. Docs: https://docs.anthropic.com/en/docs/claude-code/hooks\n\n## 1.0.37\n\n- Remove ability to set `Proxy-Authorization` header via ANTHROPIC_AUTH_TOKEN or apiKeyHelper\n\n## 1.0.36\n\n- Web search now takes today's date into context\n- Fixed a bug where stdio MCP servers were not terminating properly on exit\n\n## 1.0.35\n\n- Added support for MCP OAuth Authorization Server discovery\n\n## 1.0.34\n\n- Fixed a memory leak causing a MaxListenersExceededWarning message to appear\n\n## 1.0.33\n\n- Improved logging functionality with session ID support\n- Added prompt input undo functionality (Ctrl+Z and vim 'u' command)\n- Improvements to plan mode\n\n## 1.0.32\n\n- Updated loopback config for litellm\n- Added forceLoginMethod setting to bypass login selection screen\n\n## 1.0.31\n\n- Fixed a bug where ~/.claude.json would get reset when file contained invalid JSON\n\n## 1.0.30\n\n- Custom slash commands: Run bash output, @-mention files, enable thinking with thinking keywords\n- Improved file path autocomplete with filename matching\n- Added timestamps in Ctrl-r mode and fixed Ctrl-c handling\n- Enhanced jq regex support for complex filters with pipes and select\n\n## 1.0.29\n\n- Improved CJK character support in cursor navigation and rendering\n\n## 1.0.28\n\n- Slash commands: Fix selector display during history navigation\n- Resizes images before upload to prevent API size limit errors\n- Added XDG_CONFIG_HOME support to configuration directory\n- Performance optimizations for memory usage\n- New attributes (terminal.type, language) in OpenTelemetry logging\n\n## 1.0.27\n\n- Streamable HTTP MCP servers are now supported\n- Remote MCP servers (SSE and HTTP) now support OAuth\n- MCP resources can now be @-mentioned\n- /resume slash command to switch conversations within Claude Code\n\n## 1.0.25\n\n- Slash commands: moved \"project\" and \"user\" prefixes to descriptions\n- Slash commands: improved reliability for command discovery\n- Improved support for Ghostty\n- Improved web search reliability\n\n## 1.0.24\n\n- Improved /mcp output\n- Fixed a bug where settings arrays got overwritten instead of merged\n\n## 1.0.23\n\n- Released TypeScript SDK: import @anthropic-ai/claude-code to get started\n- Released Python SDK: pip install claude-code-sdk to get started\n\n## 1.0.22\n\n- SDK: Renamed `total_cost` to `total_cost_usd`\n\n## 1.0.21\n\n- Improved editing of files with tab-based indentation\n- Fix for tool_use without matching tool_result errors\n- Fixed a bug where stdio MCP server processes would linger after quitting Claude Code\n\n## 1.0.18\n\n- Added --add-dir CLI argument for specifying additional working directories\n- Added streaming input support without require -p flag\n- Improved startup performance and session storage performance\n- Added CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR environment variable to freeze working directory for bash commands\n- Added detailed MCP server tools display (/mcp)\n- MCP authentication and permission improvements\n- Added auto-reconnection for MCP SSE connections on disconnect\n- Fixed issue where pasted content was lost when dialogs appeared\n\n## 1.0.17\n\n- We now emit messages from sub-tasks in -p mode (look for the parent_tool_use_id property)\n- Fixed crashes when the VS Code diff tool is invoked multiple times quickly\n- MCP server list UI improvements\n- Update Claude Code process title to display \"claude\" instead of \"node\"\n\n## 1.0.11\n\n- Claude Code can now also be used with a Claude Pro subscription\n- Added /upgrade for smoother switching to Claude Max plans\n- Improved UI for authentication from API keys and Bedrock/Vertex/external auth tokens\n- Improved shell configuration error handling\n- Improved todo list handling during compaction\n\n## 1.0.10\n\n- Added markdown table support\n- Improved streaming performance\n\n## 1.0.8\n\n- Fixed Vertex AI region fallback when using CLOUD_ML_REGION\n- Increased default otel interval from 1s -> 5s\n- Fixed edge cases where MCP_TIMEOUT and MCP_TOOL_TIMEOUT weren't being respected\n- Fixed a regression where search tools unnecessarily asked for permissions\n- Added support for triggering thinking non-English languages\n- Improved compacting UI\n\n## 1.0.7\n\n- Renamed /allowed-tools -> /permissions\n- Migrated allowedTools and ignorePatterns from .claude.json -> settings.json\n- Deprecated claude config commands in favor of editing settings.json\n- Fixed a bug where --dangerously-skip-permissions sometimes didn't work in --print mode\n- Improved error handling for /install-github-app\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.6\n\n- Improved edit reliability for tab-indented files\n- Respect CLAUDE_CONFIG_DIR everywhere\n- Reduced unnecessary tool permission prompts\n- Added support for symlinks in @file typeahead\n- Bugfixes, UI polish, and tool reliability improvements\n\n## 1.0.4\n\n- Fixed a bug where MCP tool errors weren't being parsed correctly\n\n## 1.0.1\n\n- Added `DISABLE_INTERLEAVED_THINKING` to give users the option to opt out of interleaved thinking.\n- Improved model references to show provider-specific names (Sonnet 3.7 for Bedrock, Sonnet 4 for Console)\n- Updated documentation links and OAuth process descriptions\n\n## 1.0.0\n\n- Claude Code is now generally available\n- Introducing Sonnet 4 and Opus 4 models\n\n## 0.2.125\n\n- Breaking change: Bedrock ARN passed to `ANTHROPIC_MODEL` or `ANTHROPIC_SMALL_FAST_MODEL` should no longer contain an escaped slash (specify `/` instead of `%2F`)\n- Removed `DEBUG=true` in favor of `ANTHROPIC_LOG=debug`, to log all requests\n\n## 0.2.117\n\n- Breaking change: --print JSON output now returns nested message objects, for forwards-compatibility as we introduce new metadata fields\n- Introduced settings.cleanupPeriodDays\n- Introduced CLAUDE_CODE_API_KEY_HELPER_TTL_MS env var\n- Introduced --debug mode\n\n## 0.2.108\n\n- You can now send messages to Claude while it works to steer Claude in real-time\n- Introduced BASH_DEFAULT_TIMEOUT_MS and BASH_MAX_TIMEOUT_MS env vars\n- Fixed a bug where thinking was not working in -p mode\n- Fixed a regression in /cost reporting\n- Deprecated MCP wizard interface in favor of other MCP commands\n- Lots of other bugfixes and improvements\n\n## 0.2.107\n\n- CLAUDE.md files can now import other files. Add @path/to/file.md to ./CLAUDE.md to load additional files on launch\n\n## 0.2.106\n\n- MCP SSE server configs can now specify custom headers\n- Fixed a bug where MCP permission prompt didn't always show correctly\n\n## 0.2.105\n\n- Claude can now search the web\n- Moved system & account status to /status\n- Added word movement keybindings for Vim\n- Improved latency for startup, todo tool, and file edits\n\n## 0.2.102\n\n- Improved thinking triggering reliability\n- Improved @mention reliability for images and folders\n- You can now paste multiple large chunks into one prompt\n\n## 0.2.100\n\n- Fixed a crash caused by a stack overflow error\n- Made db storage optional; missing db support disables --continue and --resume\n\n## 0.2.98\n\n- Fixed an issue where auto-compact was running twice\n\n## 0.2.96\n\n- Claude Code can now also be used with a Claude Max subscription (https://claude.ai/upgrade)\n\n## 0.2.93\n\n- Resume conversations from where you left off from with \"claude --continue\" and \"claude --resume\"\n- Claude now has access to a Todo list that helps it stay on track and be more organized\n\n## 0.2.82\n\n- Added support for --disallowedTools\n- Renamed tools for consistency: LSTool -> LS, View -> Read, etc.\n\n## 0.2.75\n\n- Hit Enter to queue up additional messages while Claude is working\n- Drag in or copy/paste image files directly into the prompt\n- @-mention files to directly add them to context\n- Run one-off MCP servers with `claude --mcp-config <path-to-file>`\n- Improved performance for filename auto-complete\n\n## 0.2.74\n\n- Added support for refreshing dynamically generated API keys (via apiKeyHelper), with a 5 minute TTL\n- Task tool can now perform writes and run bash commands\n\n## 0.2.72\n\n- Updated spinner to indicate tokens loaded and tool usage\n\n## 0.2.70\n\n- Network commands like curl are now available for Claude to use\n- Claude can now run multiple web queries in parallel\n- Pressing ESC once immediately interrupts Claude in Auto-accept mode\n\n## 0.2.69\n\n- Fixed UI glitches with improved Select component behavior\n- Enhanced terminal output display with better text truncation logic\n\n## 0.2.67\n\n- Shared project permission rules can be saved in .claude/settings.json\n\n## 0.2.66\n\n- Print mode (-p) now supports streaming output via --output-format=stream-json\n- Fixed issue where pasting could trigger memory or bash mode unexpectedly\n\n## 0.2.63\n\n- Fixed an issue where MCP tools were loaded twice, which caused tool call errors\n\n## 0.2.61\n\n- Navigate menus with vim-style keys (j/k) or bash/emacs shortcuts (Ctrl+n/p) for faster interaction\n- Enhanced image detection for more reliable clipboard paste functionality\n- Fixed an issue where ESC key could crash the conversation history selector\n\n## 0.2.59\n\n- Copy+paste images directly into your prompt\n- Improved progress indicators for bash and fetch tools\n- Bugfixes for non-interactive mode (-p)\n\n## 0.2.54\n\n- Quickly add to Memory by starting your message with '#'\n- Press ctrl+r to see full output for long tool results\n- Added support for MCP SSE transport\n\n## 0.2.53\n\n- New web fetch tool lets Claude view URLs that you paste in\n- Fixed a bug with JPEG detection\n\n## 0.2.50\n\n- New MCP \"project\" scope now allows you to add MCP servers to .mcp.json files and commit them to your repository\n\n## 0.2.49\n\n- Previous MCP server scopes have been renamed: previous \"project\" scope is now \"local\" and \"global\" scope is now \"user\"\n\n## 0.2.47\n\n- Press Tab to auto-complete file and folder names\n- Press Shift + Tab to toggle auto-accept for file edits\n- Automatic conversation compaction for infinite conversation length (toggle with /config)\n\n## 0.2.44\n\n- Ask Claude to make a plan with thinking mode: just say 'think' or 'think harder' or even 'ultrathink'\n\n## 0.2.41\n\n- MCP server startup timeout can now be configured via MCP_TIMEOUT environment variable\n- MCP server startup no longer blocks the app from starting up\n\n## 0.2.37\n\n- New /release-notes command lets you view release notes at any time\n- `claude config add/remove` commands now accept multiple values separated by commas or spaces\n\n## 0.2.36\n\n- Import MCP servers from Claude Desktop with `claude mcp add-from-claude-desktop`\n- Add MCP servers as JSON strings with `claude mcp add-json <n> <json>`\n\n## 0.2.34\n\n- Vim bindings for text input - enable with /vim or /config\n\n## 0.2.32\n\n- Interactive MCP setup wizard: Run \"claude mcp add\" to add MCP servers with a step-by-step interface\n- Fix for some PersistentShell issues\n\n## 0.2.31\n\n- Custom slash commands: Markdown files in .claude/commands/ directories now appear as custom slash commands to insert prompts into your conversation\n- MCP debug mode: Run with --mcp-debug flag to get more information about MCP server errors\n\n## 0.2.30\n\n- Added ANSI color theme for better terminal compatibility\n- Fixed issue where slash command arguments weren't being sent properly\n- (Mac-only) API keys are now stored in macOS Keychain\n\n## 0.2.26\n\n- New /approved-tools command for managing tool permissions\n- Word-level diff display for improved code readability\n- Fuzzy matching for slash commands\n\n## 0.2.21\n\n- Fuzzy matching for /commands\n",
  "changelogLastFetched": 1737420000000,
  "s1mAccessCache": {
    "504d6456-0ca3-4a13-a46e-84b077157abf": {
      "hasAccess": false,
      "timestamp": 1755993600000
    }
  },
  "isQualifiedForDataSharing": false,
  "lastReleaseNotesSeen": "1.0.77"
}